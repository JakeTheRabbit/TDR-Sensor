# ===================================================================
# ESPHome Configuration for an M5Stack Atom + Infiwin MT22 SDI-12 Probe
# -------------------------------------------------------------------
# Project: f1-row2-front-sdi12
# Author: Ben Isdale | Legacy Workspace (NZ)
# License: MIT
# Description:
#   Reads an Infiwin MT22 (a Teros-12-compatible sensor from China)
#   via SDI-12, and exposes calibrated data (VWC, temperature, and
#   pore EC) to Home Assistant.
#
#   This configuration uses both the Hilhorst and Mass-Balance
#   models for pore EC and blends them dynamically based on
#   water content — ensuring stable and realistic EC readings
#   in rockwool, coco, or peat substrates.
#
#   Typical substrate ranges:
#     - Rockwool: 0–80 % VWC, 2–10 dS/m pore EC
#     - Coco/Coir: 0–75 % VWC, 1–8 dS/m pore EC
#     - Peat: 0–65 % VWC, 0.5–5 dS/m pore EC
# ===================================================================

esphome:
  name: substrate-sensor

# -------------------------------------------------------------------
# Board Configuration
# -------------------------------------------------------------------
esp32:
  board: m5stack-atom
  framework:
    type: esp-idf  # ESP-IDF = official Espressif IoT framework

# -------------------------------------------------------------------
# Core Services
# -------------------------------------------------------------------
logger:
  level: INFO  # Enables serial log output for debugging

api:
  encryption:
    key: ""

ota:
  - platform: esphome
    password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: ""
    password: ""

web_server:
  port: 80
  local: true
  version: 2
  include_internal: true  # Enables diagnostics via browser

# -------------------------------------------------------------------
# External Component Setup (SDI-12 Support)
# -------------------------------------------------------------------
external_components:
  - source: github://ssieb/esphome@uarthalf
    components: [ uart ]
  - source: github://ssieb/esphome_components@sdi12
    components: [ sdi12 ]

# -------------------------------------------------------------------
# UART Configuration for SDI-12 Communication
# -------------------------------------------------------------------
uart:
  - id: sdi12uart
    tx_pin:
      number: GPIO26
      inverted: true    # SDI-12 requires inverted signal
    baud_rate: 1200
    data_bits: 7
    parity: even
    stop_bits: 1
    half_duplex: true   # Shared TX/RX line

sdi12:
  - id: sdibus
    uart_id: sdi12uart

# -------------------------------------------------------------------
# Sensor Configuration
# -------------------------------------------------------------------
sensor:
  # -----------------------------------------------------------------
  # Raw data from SDI-12 sensor
  # -----------------------------------------------------------------
  - platform: sdi12
    address: 0
    update_interval: 10s
    sensors:
      - index: 1
        name: "RAW VWC"
        id: mt22_raw
        accuracy_decimals: 0
        internal: true
      - index: 2
        name: "Temperature"
        id: mt22_temp
        unit_of_measurement: "°C"
        accuracy_decimals: 1
      - index: 3
        name: "Bulk EC (µS/cm)"
        id: mt22_bulk_ec_uS
        unit_of_measurement: "µS/cm"
        accuracy_decimals: 0

  # -----------------------------------------------------------------
  # Volumetric Water Content (VWC)
  # -----------------------------------------------------------------
  - platform: template
    name: "VWC"
    id: mt22_vwc
    unit_of_measurement: "%"
    accuracy_decimals: 2
    update_interval: 10s
    lambda: |-
      // Polynomial from MT22 manual (non-soil substrates)
      float R = id(mt22_raw).state;
      if (isnan(R) || R <= 0) return NAN;
      float theta = 6.771e-10f*R*R*R - 5.105e-6f*R*R + 1.302e-2f*R - 10.848f;
      float pct = theta * 100.0f;
      return clamp(pct, 0.0f, 100.0f);

  # -----------------------------------------------------------------
  # Apparent Permittivity (εb)
  # -----------------------------------------------------------------
  - platform: template
    name: "Apparent Permittivity (εb)"
    id: mt22_eps_b
    accuracy_decimals: 2
    update_interval: 10s
    lambda: |-
      // From MT22 manual (Eq. 6.3)
      float R = id(mt22_raw).state;
      if (isnan(R) || R <= 0) return NAN;
      float inner = 2.887e-9f*R*R*R - 2.080e-5f*R*R + 5.276e-2f*R - 43.39f;
      return inner * inner;  // Square term required per Teros-12 method

  # -----------------------------------------------------------------
  # Bulk Electrical Conductivity σb (µS/cm → dS/m)
  # -----------------------------------------------------------------
  - platform: template
    name: "Bulk EC (σb @25°C)"
    id: mt22_bulk_ec_25
    unit_of_measurement: "dS/m"
    accuracy_decimals: 3
    update_interval: 10s
    lambda: |-
      float us = id(mt22_bulk_ec_uS).state;
      if (isnan(us)) return NAN;
      return us / 1000.0f;

  # -----------------------------------------------------------------
  # Hilhorst Multiplier (Diagnostic)
  # -----------------------------------------------------------------
  - platform: template
    name: "Hilhorst Multiplier"
    id: mt22_hilhorst_mult
    unit_of_measurement: "×"
    accuracy_decimals: 2
    internal: true
    lambda: |-
      float eb = id(mt22_eps_b).state;
      if (isnan(eb)) return NAN;
      const float eps0 = 4.1f;      // Hilhorst offset
      float denom = eb - eps0;
      if (denom <= 0.5f) return NAN;
      const float ep25 = 78.45f;    // Dielectric constant of water @25°C
      return ep25 / denom;

  # -----------------------------------------------------------------
  # Diagnostic EC Calculations (Optional)
  # -----------------------------------------------------------------
  - platform: template
    name: "EC (mass-balance diag)"
    id: mt22_ec_mass
    internal: true
    unit_of_measurement: "dS/m"
    lambda: |-
      float theta = id(mt22_vwc).state / 100.0f;
      float sb25 = id(mt22_bulk_ec_25).state;
      if (isnan(theta) || isnan(sb25)) return NAN;
      if (theta < 0.10f) theta = 0.10f;
      return sb25 / theta;

  - platform: template
    name: "EC (Hilhorst diag)"
    id: mt22_ec_hil
    internal: true
    unit_of_measurement: "dS/m"
    lambda: |-
      float eb = id(mt22_eps_b).state;
      float sb25 = id(mt22_bulk_ec_25).state;
      if (isnan(eb) || isnan(sb25)) return NAN;
      const float eps0 = 4.1f;
      float denom = eb - eps0;
      if (denom <= 0.5f) return NAN;
      const float ep25 = 78.45f;
      float mult = ep25 / denom;
      if (mult <= 0.5f || mult >= 20.0f) return NAN;
      return sb25 * mult;

  # -----------------------------------------------------------------
  # Hybrid Pore Water EC (Stable Across Moisture Range)
  # -----------------------------------------------------------------
  - platform: template
    name: "pwEC (Pore EC)"
    id: mt22_pwec
    unit_of_measurement: "dS/m"
    accuracy_decimals: 2
    lambda: |-
      float theta = id(mt22_vwc).state / 100.0f;
      float sb25 = id(mt22_bulk_ec_25).state;
      if (isnan(theta) || isnan(sb25)) return NAN;

      // --- Fallback mass-balance (used when dry) ---
      if (theta < 0.10f) theta = 0.10f;
      float ec_mass = sb25 / theta;

      // --- Hilhorst EC (valid when wet) ---
      float ec_hil = id(mt22_ec_hil).state;
      float ec = ec_mass;

      // --- Weighted blend between methods ---
      if (!isnan(ec_hil)) {
        float w = 0.0f;
        if      (theta <= 0.40f) w = 0.0f;   // 100% mass-balance
        else if (theta >= 0.60f) w = 1.0f;   // 100% Hilhorst
        else                     w = (theta - 0.40f) / 0.20f; // blend zone
        ec = (1.0f - w) * ec_mass + w * ec_hil;
      }

      // --- Clamp to realistic range for soilless media ---
      if (ec < 0) ec = 0;
      if (ec > 25) ec = 25;
      return ec;

  # -----------------------------------------------------------------
  # System Uptime
  # -----------------------------------------------------------------
  - platform: uptime
    name: "Uptime"

# -------------------------------------------------------------------
# Notes:
# - VWC calibration is based on the “soilless” polynomial from METER Group.
# - Pore EC blends Hilhorst and mass-balance methods automatically:
#     < 40 % VWC → mass-balance (dry zone)
#     40–60 % VWC → blended
#     > 60 % VWC → Hilhorst (wet zone)
# - Suitable for rockwool, coco, or peat; values align closely with TEROS-12.
# -------------------------------------------------------------------
